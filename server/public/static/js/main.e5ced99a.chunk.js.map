{"version":3,"sources":["common/utils.js","common/theme.js","PayslipForm/components/Alert.js","PayslipForm/components/CompanyInfo.js","PayslipForm/components/EmployeeInfo.js","PayslipForm/components/EarningAndDeduction.js","PayslipForm/components/Success.js","PayslipForm/index.js","common/reportWebVitals.js","index.js"],"names":["BasicSalary","calculateAmount","percentage","PayslipSampleData","company","icon","iconUrl","name","address","employee","email","id","position","joiningDate","moment","format","uan","accountNumber","pfAccountNumber","paidDays","lopDays","earnings","amount","deductions","reimbursements","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","Alert","open","duration","onClose","anchorOrigin","vertical","horizontal","type","rest","children","handleClose","event","reason","Snackbar","autoHideDuration","elevation","variant","severity","forwardRef","ref","templateData","classes","useState","current","setCompany","isEnableCompanyIconUrl","setIsEnableCompanyIconUrl","openAlert","setOpenAlert","useImperativeHandle","set","reset","handleChange","property","value","target","files","includes","Fragment","Typography","gutterBottom","Grid","container","spacing","className","girdButton","item","xs","sm","FormControlLabel","control","Switch","checked","onChange","e","color","label","TextField","required","autoComplete","fullWidth","root","accept","input","uploadText","htmlFor","uploadButton","Tooltip","title","arrow","placement","Button","component","size","startIcon","style","display","alignItems","setEmployee","utils","DateMomentUtils","disableToolbar","KeyboardButtonProps","setValue","capitalize","totalAmountTitle","onRemoveRows","index","splice","marginBottom2","customInput","thousandSeparator","thousandsGroupStyle","prefix","onValueChange","formattedValue","addButton","onClick","array","disabled","length","marginRight","Table","TableHead","TableRow","TableCell","border","width","align","TableBody","map","row","displayType","IconButton","fontSize","reduce","sum","height","Success","result","setResult","marginTop3","justify","AlertTitle","to","href","url","onPerfEntry","REST_FETCH_API","useStyles","makeStyles","layout","marginLeft","opacity","breakpoints","up","paper","marginTop","marginBottom","padding","section","justifyContent","cursor","minWidth","overflow","whiteSpace","textOverflow","buttons","button","floatRight","float","initialData","PayslipForm","alert","setAlert","isDownloadLoading","setIsDownloadLoading","isEmailLoading","setIsEmailLoading","useRef","cloneDeep","companyRef","employeeRef","earningRef","deductionRef","reimbursementRef","handleReset","handleFetchRequest","preventDefault","form","FormData","key","isObject","isArray","subKey","append","charAt","toUpperCase","slice","JSON","stringify","fileName","fetch","method","body","then","response","ok","json","contentDisposition","headers","get","replace","blob","status","Error","message","link","document","createElement","URL","createObjectURL","download","click","revokeObjectURL","catch","err","Paper","CircularProgress","thickness","ReactDOM","render","ThemeProvider","CssBaseline","getElementById","Function","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.e5ced99a.chunk.js","sourcesContent":["import moment from 'moment';\n\nexport const API_ENDPOINT = '/api';\n\nconst BasicSalary = 25000;\n\nconst calculateAmount = (percentage = 0) => {\n  return (BasicSalary * percentage) / 100\n}\n\nexport const PayslipSampleData = {\n  company: {\n    icon: null,\n    iconUrl: '',\n    name: 'Tarzax Technology Pvt ltd.',\n    address: '250, S-BLock, 27 Street, Adayar, Chennai: 600027'\n  },\n  employee: {\n    name: 'Paalamugan S',\n    email: 'abc@gmail.com',\n    id: 'emp01',\n    position: 'Software Engineer',\n    joiningDate: moment('2020-04-08').format(),\n    uan: '201017181120',\n    accountNumber: '8718927610892',\n    pfAccountNumber: 'TN/AAA/0000000/000/0000000',\n    paidDays: 28,\n    lopDays: 3\n  },\n  earnings: [\n    {\n      name: 'Basic pay',\n      amount: BasicSalary\n    },\n    {\n      name: 'House Rent Allowance',\n      amount: calculateAmount(20)\n    },\n    {\n      name: 'Dearness Allowance',\n      amount: calculateAmount(15)\n    },\n    // {\n    //   name: 'Overtime',\n    //   amount: calculateAmount(13)\n    // },\n    // {\n    //   name: 'Performance Bonus',\n    //   amount: calculateAmount(5)\n    // },\n  ],\n  deductions: [\n    {\n      name: 'Provident Fund', // 12% Basic salary\n      amount: calculateAmount(12)\n    },\n    {\n      name: 'Income Tax', // Tentative tax every month based on your tax saving declaration\n      amount: calculateAmount(5)\n    },\n    // {\n    //   name: 'Professional Tax', // Its a state tax applicable in only certain states\n    //   amount: 350\n    // }\n  ],\n  reimbursements: [\n    {\n      name: 'Medical Reimbursement',\n      amount: calculateAmount(20),\n    },\n    {\n      name: 'Telephone Reimbursement',\n      amount: calculateAmount(7),\n    },\n    // {\n    //   name: 'Leave travel Reimbursement',\n    //   amount: calculateAmount(6),\n    // },\n    {\n      name: 'Conveyance Reimbursement',\n      amount: calculateAmount(2),\n    },\n    // {\n    //   name: 'Special Reimbursement',\n    //   amount: calculateAmount(1),\n    // },\n    // {\n    //   name: 'Lunch Reimbursement',\n    //   amount: calculateAmount(1),\n    // },\n  ]\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: 'rgb(220, 0, 78)',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n","import Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default function Alert({ open, duration = 5000, onClose = () => {}, anchorOrigin = { vertical: 'top', horizontal: 'center' }, type, ...rest }) {\n\n  if (!type || !rest.children) {\n    return null;\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    onClose(false);\n  };\n\n  return (\n    <Snackbar\n      open={open}\n      anchorOrigin = {anchorOrigin}\n      autoHideDuration={duration}\n      onClose={handleClose}>\n        <MuiAlert onClose={handleClose} elevation={6} variant=\"filled\" severity={type} {...rest} />\n    </Snackbar>);\n}","import React from 'react';\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport { Grid, Typography, TextField, Button, Tooltip } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Alert from './Alert';\n\n// We need to wrap component in `forwardRef` in order to gain\n// access to the ref object that is assigned using the `ref` prop.\n// This ref is passed as the second parameter to the function component.\nexport default forwardRef(function CompanyInfo({ templateData, classes }, ref) {\n\n  const [company, setCompany] = useState({ ...templateData.current.company });\n  const [isEnableCompanyIconUrl, setIsEnableCompanyIconUrl] = useState(false);\n  const [openAlert, setOpenAlert] = useState(false);\n\n  // The component instance will be extended\n  // with whatever you return from the callback passed\n  // as the second argument\n  useImperativeHandle(ref, () => ({\n\n    set(company) {\n      setCompany(company);\n    },\n\n    reset(company) {\n      setCompany(company);\n    }\n\n  }));\n\n  const handleChange = (property) => {\n    return (event) => {\n\n      let value = (property === 'icon' ? event.target.files[0] : event.target.value);\n\n      if (value && value.type && !value.type.includes('image')) {\n        return setOpenAlert(true);\n      }\n\n      templateData.current.company[property] = value;\n      setCompany({ ...company, [property]: value });\n\n    }\n  }\n\n  const onChangeIcon = (e) => {\n\n    let checked = e.target.checked;\n\n    if (checked) {\n      templateData.current.company.iconUrl = '';\n    } else {\n      templateData.current.company.icon = null;\n    }\n\n    setCompany({ ...templateData.current.company });\n\n    setIsEnableCompanyIconUrl(checked);\n\n  }\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Company Information\n      </Typography>\n\n      <Alert open={openAlert} onClose={setOpenAlert} type=\"error\" children=\"Support only image format.(svg, png, jpg)\" />\n\n      <Grid container spacing={3} className={classes.girdButton}>\n        <Grid item xs={12} sm={6}>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isEnableCompanyIconUrl}\n                onChange={onChangeIcon}\n                color=\"primary\"\n              />\n            }\n            label=\"Enable Icon URL\"\n          />\n          {\n            (isEnableCompanyIconUrl ? (\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"companyIconUrl\"\n                  name=\"companyIconUrl\"\n                  label=\"Company Icon URL\"\n                  autoComplete=\"off\"\n                  value={company.iconUrl}\n                  onChange={handleChange('iconUrl')}\n                  fullWidth\n                />\n              </Grid>) :\n            (<div className={classes.root}>\n              <input\n                accept=\"image/*\"\n                className={classes.input}\n                id=\"companyIcon\"\n                name=\"companyIcon\"\n                type=\"file\"\n                onChange={handleChange('icon')}\n              />\n              <div className={classes.uploadText}>\n                {company.icon && company.icon.name ? company.icon.name : 'No files chosen'}\n              </div>\n              <label htmlFor=\"companyIcon\" className={classes.uploadButton}>\n                <Tooltip title=\"Choose your company icon\" arrow placement=\"top\">\n                  <Button\n                    variant=\"contained\"\n                    component=\"span\"\n                    size=\"small\"\n                    startIcon={<CloudUploadIcon />}>\n                    Upload Icon\n                  </Button>\n                </Tooltip>\n              </label>\n            </div>))\n          }\n\n        </Grid>\n        <Grid item xs={12} sm={6} style={{ display: 'flex', alignItems: 'flex-end' }}>\n          <TextField\n            required\n            id=\"companyName\"\n            name=\"companyName\"\n            label=\"Company name\"\n            autoComplete=\"off\"\n            value={company.name}\n            onChange={handleChange('name')}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"companyAddress\"\n            name=\"companyAddress\"\n            label=\"Company Address\"\n            value={company.address}\n            onChange={handleChange('address')}\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n})","import { useState, Fragment, forwardRef, useImperativeHandle } from 'react';\nimport { Grid, Typography, TextField } from '@material-ui/core';\n\nimport DateMomentUtils from '@date-io/moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\n\nexport default forwardRef(function EmployeeInfo({ templateData, classes }, ref) {\n\n  const [employee, setEmployee] = useState({ ...templateData.current.employee });\n\n  const handleChange = (property) => {\n    return (event) => {\n      let value = (property === 'joiningDate' ? event && event.format() : event.target.value);\n      templateData.current.employee[property] = value;\n      setEmployee({ ...employee, [property]: value });\n    }\n  }\n\n  useImperativeHandle(ref, () => ({\n\n    set(employee) {\n      setEmployee(employee);\n    },\n\n    reset(employee) {\n      setEmployee(employee);\n    }\n\n  }));\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Employee Information\n      </Typography>\n      <Grid container spacing={3} className={classes.girdButton}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"employeeName\"\n            name=\"employeeName\"\n            label=\"Employee Name\"\n            value={employee.name}\n            onChange={handleChange('name') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"employeeEmail\"\n            name=\"employeeEmail\"\n            label=\"Employee Email\"\n            type=\"email\"\n            value={employee.email}\n            onChange={handleChange('email') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"position\"\n            name=\"position\"\n            label=\"Employee Position\"\n            value={employee.position}\n            onChange={handleChange('position') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"employeeId\"\n            name=\"employeeId\"\n            label=\"Employee Id\"\n            value={employee.id}\n            onChange={handleChange('id') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <MuiPickersUtilsProvider utils={DateMomentUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"YYYY-MM-DD\"\n              id=\"joiningDate\"\n              name=\"joiningDate\"\n              label=\"Joining Date (YYYY-MM-DD)\"\n              value={employee.joiningDate}\n              onChange={handleChange('joiningDate') }\n              KeyboardButtonProps={{\n                'aria-label': 'joining date',\n              }}\n              fullWidth\n            />\n          </MuiPickersUtilsProvider>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"accountNumber\"\n            name=\"accountNumber\"\n            label=\"Account Number\"\n            value={employee.accountNumber}\n            onChange={handleChange('accountNumber') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"pfAccountNumber\"\n            name=\"pfAccountNumber\"\n            label=\"PF Account Number\"\n            value={employee.pfAccountNumber}\n            onChange={handleChange('pfAccountNumber') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            id=\"uan\"\n            name=\"uan\"\n            label=\"Universal Account Number (UAN)\"\n            value={employee.uan}\n            onChange={handleChange('uan') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            type=\"number\"\n            id=\"paidDays\"\n            name=\"paidDays\"\n            label=\"Paid Days\"\n            value={employee.paidDays}\n            onChange={handleChange('paidDays') }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            type=\"number\"\n            id=\"lopDays\"\n            name=\"lopDays\"\n            label=\"LOP Days\"\n            value={employee.lopDays}\n            onChange={handleChange('lopDays') }\n            fullWidth\n          />\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n})","import React from 'react';\nimport { useState, forwardRef, useImperativeHandle } from 'react';\nimport { capitalize } from 'lodash';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport NumberFormat from 'react-number-format';\n\nexport default forwardRef(function EarningAndDeduction({ type, templateData, classes }, ref) {\n\n  const [value, setValue] = useState({ name: '', amount: '' });\n\n  const title = capitalize(type) + 's';\n  const property = type + 's';\n  const totalAmountTitle = type === 'earning' ? 'Gross Earnings' :\n                    type === 'deduction' ? 'Total Deductions' :\n                    type === 'reimbursement' ? 'Total Reimbursements' : '';\n\n  useImperativeHandle(ref, () => ({\n\n    set(value) {\n      setValue({ name: '', amount: '' });\n    },\n\n    reset(value) {\n      setValue({ name: '', amount: '' });\n    }\n\n  }));\n\n  const onAddRows = () => {\n    return (event) => {\n\n      let array = templateData.current[property] || [];\n\n      templateData.current[property] = [...array, value];\n\n      setValue({ name: '', amount: '' });\n\n    }\n  }\n\n  const onRemoveRows = (index) => {\n    return (event) => {\n      templateData.current[property].splice(index, 1);\n      setValue({ name: '', amount: '' });\n    }\n  }\n\n  const onInputAmountChange = ({ formattedValue, value:amount }) => {\n     setValue({ ...value, amount: amount });\n  }\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        <span>{title}</span>\n      </Typography>\n\n      <Grid container spacing={3} alignItems=\"flex-end\" className={classes.marginBottom2}>\n        <Grid item xs={5}>\n          <TextField\n            id={`${type}-name`}\n            name=\"name\"\n            label=\"Name\"\n            value={value.name}\n            onChange={(e) => setValue({ ...value, name: e.target.value }) }\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={5}>\n          <NumberFormat id={`${type}-amount`} fullWidth label=\"Amount\" value={value.amount} customInput={TextField} thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} onValueChange={onInputAmountChange} />\n        </Grid>\n        <Grid item xs={2}>\n          <Button\n            size=\"small\"\n            className={classes.addButton}\n            variant=\"contained\"\n            startIcon={<AddCircleIcon />}\n            onClick={onAddRows()}\n            disabled={!value.name || !value.amount}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Grid>\n\n      {templateData.current[property] && templateData.current[property].length ?\n        (<Grid container spacing={3} className={classes.girdButton}>\n          <Grid item xs={12} style={{ marginRight: '24px' }}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }}>Name</TableCell>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\", width: \"20%\" }} align=\"right\">Amount(₹)</TableCell>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\", width: \"10%\" }} align=\"right\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {templateData.current[property].map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }}>{row.name}</TableCell>\n                    <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }} align=\"right\">\n                      <NumberFormat value={row.amount} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} />\n                    </TableCell>\n                    <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }} align=\"right\">\n                      <IconButton color=\"secondary\" onClick={onRemoveRows(index)}>\n                        <DeleteIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n                <TableRow key={`total-${property}`}>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }}><b>{totalAmountTitle}</b></TableCell>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }} align=\"right\">\n                    <b><NumberFormat value={templateData.current[property].reduce((sum, row) => sum += +(row.amount), 0)} displayType={'text'} thousandSeparator={true} thousandsGroupStyle=\"lakh\" prefix={'₹'} /></b>\n                  </TableCell>\n                  <TableCell style={{ border: \"1px solid rgba(224, 224, 224, 1)\" }} align=\"right\"><div style={{ height: '35px' }}></div></TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </Grid>\n        </Grid>) : null }\n    </React.Fragment>\n  );\n})","import { Fragment } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\n// const useStyles = makeStyles((theme) => ({\n//   marginBottom2: {\n//     marginBottom: theme.spacing(2),\n//   },\n//   marginTop3: {\n//     marginTop: theme.spacing(3),\n//   },\n// }));\n\nexport default function Success({ result, setResult = () => {}, classes }) {\n  // const classes = useStyles();\n\n  return (\n    <Fragment>\n      <div className={classes.marginTop3}>\n        <Grid container justify=\"flex-end\" className={classes.marginBottom2}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<ArrowBackIcon />}\n            size=\"small\"\n            onClick={() => setResult(null)}\n          >\n            Back\n          </Button>\n        </Grid>\n        <Alert severity=\"success\" className={classes.marginBottom2}>\n          <AlertTitle>Success</AlertTitle>\n          {result.to ? (<span>Successfully Email Sent to - <strong>result.to</strong></span>) : null}\n          {result.type === 'ethereal' ? <div> <span>Successfully Email Generator</span>.<Button size=\"small\" href={result.url} color=\"primary\" target=\"_blank\">Click here to View Mail</Button> </div> : null }\n        </Alert>\n      </div>\n    </Fragment>\n  );\n}","import { Fragment, useRef, useState } from 'react';\nimport { isObject, isArray, cloneDeep } from 'lodash';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { API_ENDPOINT, PayslipSampleData } from '../common';\n\nimport { CompanyInfo, EmployeeInfo, EarningAndDeduction, Success, Alert } from './components';\n\nconst REST_FETCH_API = `${API_ENDPOINT}/payslip`;\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    opacity: 0.9,\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  section: {\n    marginTop: theme.spacing(4),\n  },\n  root: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  input: {\n    display: 'none'\n  },\n  uploadButton: {\n    cursor: 'pointer',\n    minWidth: '135px'\n  },\n  uploadText: {\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n  },\n  girdButton: {\n    marginBottom: theme.spacing(3),\n  },\n  addButton: {\n    marginLeft: theme.spacing(1)\n  },\n  marginBottom2: {\n    marginBottom: theme.spacing(2)\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  floatRight: {\n    float: 'right'\n  },\n  marginTop3: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst initialData = {\n  company: {\n    icon: null,\n    iconUrl: '',\n    name: '',\n    address: ''\n  },\n  employee: {\n    name: '',\n    email: '',\n    id: '',\n    position: '',\n    joiningDate: null,\n    uan: '',\n    accountNumber: '',\n    pfAccountNumber: '',\n    paidDays: 0,\n    lopDays: 0\n  },\n  earnings: [],\n  deductions: [],\n  reimbursements: []\n}\n\nexport default function PayslipForm() {\n\n  const classes = useStyles();\n\n  const [result, setResult] = useState(null);\n  const [alert, setAlert] = useState({ open:false, type: '', children: '' });\n  const [isDownloadLoading, setIsDownloadLoading] = useState(false);\n  const [isEmailLoading, setIsEmailLoading] = useState(false);\n\n  const templateData = useRef(cloneDeep(initialData));\n  const companyRef =  useRef();\n  const employeeRef =  useRef();\n  const earningRef =  useRef();\n  const deductionRef =  useRef();\n  const reimbursementRef =  useRef();\n\n  const handleReset = () => {\n    templateData.current = cloneDeep(initialData);\n\n    companyRef.current.reset(templateData.current.company);\n    employeeRef.current.reset(templateData.current.employee);\n    earningRef.current.reset(templateData.current.earnings);\n    deductionRef.current.reset(templateData.current.deductions);\n    reimbursementRef.current.reset(templateData.current.reimbursements);\n  }\n\n  const onSetSampleData = () => {\n    templateData.current = cloneDeep(PayslipSampleData);\n\n    companyRef.current.set(templateData.current.company);\n    employeeRef.current.set(templateData.current.employee);\n    earningRef.current.set(templateData.current.earnings);\n    deductionRef.current.set(templateData.current.deductions);\n    reimbursementRef.current.set(templateData.current.reimbursements);\n\n  }\n\n  const handleFetchRequest = (type) => {\n\n    return (event) => {\n\n        event.preventDefault();\n\n        templateData.current.type = type;\n\n        if (type === 'download') {\n          setIsDownloadLoading(true);\n        } else {\n          setIsEmailLoading(true);\n        }\n\n        var form = new FormData();\n\n        for (const key in templateData.current) {\n            if (isObject(templateData.current[key]) && !isArray(templateData.current[key])) {\n                for (const subKey in templateData.current[key]) {\n                  if (templateData.current[key][subKey]) {\n                    form.append(key + subKey.charAt(0).toUpperCase() + subKey.slice(1), templateData.current[key][subKey]);\n                  }\n                }\n            } else if (isArray(templateData.current[key])) {\n                form.append(key, JSON.stringify(templateData.current[key]));\n            } else {\n              if (templateData.current[key]) {\n                form.append(key, templateData.current[key]);\n              }\n            }\n        }\n\n        let fileName = 'payslip.pdf';\n\n        fetch(REST_FETCH_API, {\n            method: 'POST',\n            body: form\n        })\n        .then((response) => {\n\n          if (!response.ok) {\n            return response.json();\n          }\n\n          let contentDisposition = response.headers.get('content-disposition');\n\n          if (contentDisposition) {\n            fileName = contentDisposition.replace(/.*=\"|\"$/g, '');\n          }\n\n          return (type === 'download' ? response.blob() : response.json())\n        })\n        .then((response) => {\n\n          if (response.status && response.status > 399) {\n            throw new Error(response.message);\n          }\n\n          return response;\n        })\n        .then((result) => {\n\n            if (type === 'download') {\n\n              const link = document.createElement('a')\n              link.href = URL.createObjectURL(result)\n              link.download = fileName;\n              link.click();\n\n              URL.revokeObjectURL(link.href);\n\n              handleReset();\n              setIsDownloadLoading(false);\n              setAlert({ open: true, type: 'success', children: 'Successfully Downloaded.' });\n\n            } else {\n\n              handleReset();\n              setIsEmailLoading(false);\n              setResult(result);\n\n            }\n\n        })\n        .catch((err) => {\n\n          setAlert({ open: true, type: 'error', children: err.message });\n\n          if (type === 'download') {\n            setIsDownloadLoading(false);\n          } else {\n            setIsEmailLoading(false);\n          }\n\n        })\n    }\n  };\n\n  return (\n    <Fragment>\n      <Alert {...alert} duration={3000} onClose={() => setAlert({...alert, open: false })} />\n      <main className={classes.layout}>\n        <Paper elevation={0} className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\" gutterBottom>\n            Employee Payslip Generator\n          </Typography>\n          {\n            result ? (<Success result={result} setResult={setResult} classes={classes} />) :\n              (<Fragment>\n                <section className={classes.section}>\n                  <Button variant=\"contained\" size=\"small\" className={classes.floatRight} onClick={onSetSampleData}>Set Sample Data</Button>\n                  <CompanyInfo templateData={templateData} classes={classes} ref={companyRef} />\n                  <EmployeeInfo templateData={templateData} classes={classes} ref={employeeRef} />\n                  <EarningAndDeduction type=\"earning\" templateData={templateData} classes={classes} ref={earningRef} />\n                  <EarningAndDeduction type=\"deduction\" templateData={templateData} classes={classes} ref={deductionRef} />\n                  <EarningAndDeduction type=\"reimbursement\" templateData={templateData} classes={classes} ref={reimbursementRef} />\n                </section>\n\n                <div className={classes.buttons}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={handleReset}\n                    className={classes.button} >\n                      Reset\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={isDownloadLoading ? <CircularProgress size={24} thickness={4} value={100} /> : <GetAppIcon />}\n                    onClick={handleFetchRequest('download')}\n                    disabled={isDownloadLoading}\n                    className={classes.button} >\n                      Download as PDF\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={isEmailLoading ? <CircularProgress size={24} thickness={4} value={100} /> : <SendIcon />}\n                    onClick={handleFetchRequest('email')}\n                    disabled={isEmailLoading}\n                    className={classes.button}\n                  >\n                    Send as Email\n                  </Button>\n                </div>\n              </Fragment>)\n          }\n\n        </Paper>\n      </main>\n    </Fragment>\n  );\n}","export const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme, reportWebVitals } from './common';\n\nimport './styles.css';\nimport PayslipForm from './PayslipForm';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline>\n      <PayslipForm />\n    </CssBaseline>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}